name: API REST Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Clonar el repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Instalar Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 3️⃣ Instalar Newman y HTML reporter
      - name: Install Newman and HTML reporter
        run: |
          npm install -g newman
          npm install -g newman-reporter-html
          npm install -g puppeteer

      # 4️⃣ Levantar contenedor del backend
      - name: Run backend container
        run: |
          docker run -d -p 8080:8080 --name inventario kenkairon/inventario:latest
          echo "Esperando backend en http://localhost:8080..."
          for i in {1..30}; do
            if curl -s http://localhost:8080/actuator/health | grep "UP"; then
              echo "Backend listo!"
              break
            else
              echo "Esperando 5s..."
              sleep 5
            fi
          done

      # 5️⃣ Ejecutar tests de Postman y generar HTML
      - name: Run API tests
        run: |
          mkdir -p reports
          newman run "SuitePruebas.json" -e "DemoAPI.json" \
            --reporters cli,html \
            --reporter-html-export reports/reporte.html

      # 6️⃣ Convertir HTML a imagen PNG usando Puppeteer
      - name: Convert HTML report to PNG
        run: |
          node -e "
          const puppeteer = require('puppeteer');
          (async () => {
            const browser = await puppeteer.launch({args:['--no-sandbox','--disable-setuid-sandbox']});
            const page = await browser.newPage();
            await page.goto('file://' + process.cwd() + '/reports/reporte.html');
            await page.screenshot({path: 'reports/reporte.png', fullPage: true});
            await browser.close();
          })();
          "

      # 7️⃣ Subir reportes HTML y PNG como artifacts
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: reports/

      # 8️⃣ Detener y eliminar contenedor
      - name: Stop backend container
        if: always()
        run: docker stop inventario && docker rm inventario

